!(function(e) {
  function t(n) {
    if (i[n]) return i[n].exports;
    var r = (i[n] = { i: n, l: !1, exports: {} });
    return e[n].call(r.exports, r, r.exports, t), (r.l = !0), r.exports;
  }
  var i = {};
  (t.m = e),
    (t.c = i),
    (t.d = function(e, i, n) {
      t.o(e, i) || Object.defineProperty(e, i, { configurable: !1, enumerable: !0, get: n });
    }),
    (t.n = function(e) {
      var i =
        e && e.__esModule
          ? function() {
              return e.default;
            }
          : function() {
              return e;
            };
      return t.d(i, "a", i), i;
    }),
    (t.o = function(e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }),
    (t.p = ""),
    t((t.s = 0));
})([
  function(e, t, i) {
    i(1), (e.exports = i(3));
  },
  function(e, t, i) {
    "use strict";
    function n(e) {
      if (Array.isArray(e)) {
        for (var t = 0, i = Array(e.length); t < e.length; t++) i[t] = e[t];
        return i;
      }
      return Array.from(e);
    }
    function r(e, t) {
      if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }
    Object.defineProperty(t, "__esModule", { value: !0 });
    var s = (function() {
        function e(e, t) {
          for (var i = 0; i < t.length; i++) {
            var n = t[i];
            (n.enumerable = n.enumerable || !1),
              (n.configurable = !0),
              "value" in n && (n.writable = !0),
              Object.defineProperty(e, n.key, n);
          }
        }
        return function(t, i, n) {
          return i && e(t.prototype, i), n && e(t, n), t;
        };
      })(),
      a = i(2),
      h = (function() {
        function e() {
          var t = this,
            i =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : { selector: ".shrinkable", classNamespace: "shrinkable" };
          r(this, e),
            (this.onResize = this.onResize.bind(this)),
            (this.onHamburgerClick = this.onHamburgerClick.bind(this)),
            (this.shouldStart = function() {
              return t.container && t.list && t.classNamespace;
            }),
            (this.getButtonsWidth = function() {
              return (
                (t.hamburger ? t.hamburger.clientWidth : 0) +
                [].concat(n(t.list.children)).reduce(function(e, t) {
                  return e + t.clientWidth;
                }, 0)
              );
            }),
            (this.getListLastLink = function() {
              return []
                .concat(n(t.list.children))
                .filter(function(e) {
                  return "LI" === e.tagName;
                })
                .pop();
            }),
            (this.container = document.querySelector(i.selector)),
            (this.list = document.querySelector(i.selector + " > ul")),
            (this.windowSize = 0),
            (this.classNamespace = i.classNamespace),
            (this.hamburger = null),
            (this.extraMenu = null);
        }
        return (
          s(e, [
            {
              key: "start",
              value: function() {
                this.onShrink(), window.addEventListener("resize", this.onResize);
              }
            },
            {
              key: "addHamburger",
              value: function() {
                (this.hamburger = document.createElement("BUTTON")),
                  (this.hamburger.innerHTML = a.hamburger),
                  this.hamburger.classList.add(this.classNamespace + "__btn"),
                  this.hamburger.classList.add(this.classNamespace + "__theme"),
                  this.hamburger.classList.add(this.classNamespace + "__hamburger"),
                  this.container.appendChild(this.hamburger),
                  this.hamburger.addEventListener("click", this.onHamburgerClick);
              }
            },
            {
              key: "addExtraMenu",
              value: function() {
                (this.extraMenu = document.createElement("UL")),
                  this.extraMenu.classList.add(this.classNamespace + "__submenu"),
                  this.container.appendChild(this.extraMenu);
              }
            },
            {
              key: "initExtraMenu",
              value: function() {
                this.addHamburger(), this.addExtraMenu(), this.onShrink();
              }
            },
            {
              key: "killExtraMenu",
              value: function() {
                this.hamburger.removeEventListener("click", this.onHamburgerClick),
                  this.container.removeChild(this.hamburger),
                  this.container.removeChild(this.extraMenu),
                  (this.hamburger = null),
                  (this.extraMenu = null);
              }
            },
            {
              key: "onHamburgerClick",
              value: function() {
                this.hamburger.classList.contains(this.classNamespace + "__active")
                  ? (this.hamburger.classList.remove(this.classNamespace + "__active"),
                    this.extraMenu.classList.remove(this.classNamespace + "__active"))
                  : (this.hamburger.classList.add(this.classNamespace + "__active"),
                    this.extraMenu.classList.add(this.classNamespace + "__active"));
              }
            },
            {
              key: "onResize",
              value: function() {
                window.innerWidth > this.windowSize
                  ? this.onGrowth()
                  : window.innerWidth < this.windowSize && this.onShrink();
              }
            },
            {
              key: "onShrink",
              value: function() {
                for (this.windowSize = window.innerWidth; this.getButtonsWidth() > this.windowSize; ) {
                  if (!this.hamburger) return void this.initExtraMenu();
                  var e = this.list.removeChild(this.getListLastLink());
                  this.extraMenu.prepend(e);
                }
              }
            },
            {
              key: "onGrowth",
              value: function() {
                for (
                  this.windowSize = window.innerWidth;
                  this.extraMenu &&
                  this.extraMenu.children.length &&
                  this.getButtonsWidth() + this.extraMenu.children[0].clientWidth < this.windowSize;

                ) {
                  var e = this.extraMenu.removeChild(this.extraMenu.children[0]);
                  if ((this.list.append(e), !this.extraMenu.children.length)) return void this.killExtraMenu();
                }
              }
            }
          ]),
          e
        );
      })();
    t.default = h;
  },
  function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", { value: !0 });
    t.hamburger =
      '<svg xmlns="http://www.w3.org/2000/svg" width="30px" height="30px" viewBox="0 0 418.26 291.34" class="menu-icon-svg">\n<title>Menu</title>\n<rect fill="currentColor" width="418.26" height="26.75"/>\n<rect fill="currentColor" y="132.29" width="418.26" height="26.75"/>\n<rect fill="currentColor" y="264.59" width="418.26" height="26.75"/>\n</svg>';
  },
  function(e, t) {}
]);
